tasks:
  - name: "Set Up New Relic Account"
    context: "This module introduces learners to the 'AI-Driven Monitoring with New Relic' mission, where they will integrate New Relic into the TaskMaster application—a Python web app using FastAPI and Uvicorn. The goal is to monitor, troubleshoot, and optimize the application's performance in real-time. It outlines the prerequisites, including access to the GitHub repository, a New Relic account, and Docker installation, along with the necessary technical skills in Python, Docker, and Git. The module guides learners through setting up a New Relic account to begin the monitoring process."
    id: "1"
    nodes:
      - id: START
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Hello, {username}! Welcome to the 'AI-Driven Monitoring with New Relic' mission. Imagine a scenario where every millisecond of downtime affects your bottom line and user satisfaction. In today’s fast-paced digital world, understanding the inner workings of your application isn’t just a benefit—it’s a necessity. This is where Application Performance Monitoring (APM) tools like New Relic become indispensable.

                In this mission, you'll integrate New Relic into the TaskMaster application, a Python web app running with FastAPI and Uvicorn. This setup will empower you to monitor, troubleshoot, and optimize the application's performance in real-time. Ready to begin?
        edges:
          - text: "Yes, let's get started!"
            target_node_id: "screen2"

      - id: screen2
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Before we dive into the core activities, here are the essentials you'll need:

                - **Access Requirements**:
                    - **GitHub Repository**: Access to the pre-configured GitHub repository for TaskMaster: [GitHub Repository Link](https://github.com/alfred-ai-co/Improve-Code-Quality-with-Copilot).
                    - **New Relic Account**: Sign up at New Relic's website if you don't have an account.
                    - **Docker**: Ensure Docker is installed on your machine.
                - **Technical Skills**:
                    - **Basic Understanding of Python**: Familiarity with Python programming.
                    - **Familiarity with Docker**: Basic knowledge of Docker commands and operations.
                    - **Version Control with Git**: Basic skills in Git for version control.
        edges:
          - text: "Got it! Let's continue!"
            target_node_id: "END"

      - id: END
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Let's start by setting up your New Relic account to begin monitoring your Python application.

                **Steps**:

                1. **Sign Up for a New Relic Account**:
                    - Visit the [New Relic Sign-Up Page](https://newrelic.com/signup).
                    - Fill in the required details, such as your name, email address, and company information.

  - name: "Select Application Stack in New Relic"
    context: "In this module, learners continue the 'AI-Driven Monitoring with New Relic' mission by integrating monitoring capabilities into the TaskMaster application. They log in to their New Relic account, navigate the onboarding process, select Python as the tech stack, and choose Docker as the instrumentation method. Finally, they define the application type as a web app, setting the stage for detailed monitoring and optimization."
    id: "2"
    nodes:
      - id: START
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Select Python as your application stack to integrate monitoring capabilities into the API application.

                **Steps**:

                1. **Log in to New Relic**:
                    - Access your New Relic account and log in.
                2. **Onboarding Screen**:
                    - Upon logging in for the first time, you will be directed to the onboarding screen.
                3. **Select Your Host**:
                    - Click “Continue” without selecting any of the hosts.
        edges:
          - text: "Next step!"
            target_node_id: "screen5"

      - id: screen5
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Now, let's select the tech stack and instrumentation method for your application.

                **Steps**:

                1. **Select Your Tech Stack**:
                    - From the list of available options, select **'Python'**.
                2. **Select Instrumentation Method**:
                    - Choose **'Docker'** as your application runs in Docker containers.
        edges:
          - text: "Got it! What's next?"
            target_node_id: "END"

      - id: END
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Define whether your application is a web app or a non-web app.

                **Steps**:

                1. **Define Application Type**:
                    - For the API, select **'Web app'**.

                By completing this task, you will have set up the initial configuration needed to monitor your Python application with New Relic. This will enable you to collect detailed performance data and insights specific to your application stack.

  - name: "Installing the New Relic Agent"
    context: "In this module, learners create the directory structure for their project and install the New Relic APM agent. They ensure the requirements.txt file includes the necessary dependencies and verify its contents. Next, they generate and customize the New Relic configuration file (newrelic.ini) with their license key and application name, setting up the foundation for effective monitoring and performance management of their Python web application."
    id: "3"
    nodes:
      - id: START
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Let's create the directory structure and install the New Relic APM agent.

                **Steps**:

                1. **Create the Directory Structure**:
                    - Ensure your project directory is structured appropriately like so,
                    ```
                    project-management-system/
                    ├── newrelic/
                    │   ├── Dockerfile
                    ├── app/
                    │   ├── api/
                    │   ├── core/
                    │   ├── db_models/
                    │   ├── main.py
                    ├── README.md
                    ├── requirements.txt
                    ```
                2. **Install the APM Agent**:
                    - Use `pip` to install the New Relic Python agent:
                      
                      ```bash
                      pip install newrelic
                      ```
        edges:
          - text: "Next step!"
            target_node_id: "screen8"

      - id: screen8
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Let's ensure your `requirements.txt` file includes the New Relic package.

                **Steps**:

                1. **Create the `requirements.txt` File**:
                    - Ensure your `requirements.txt` includes the New Relic package:
                      
                      ```bash
                      pip freeze > requirements.txt
                      ```
                2. **Verify the File**:
                    - The file should look something like this:
                      
                      ```makefile
                      fastapi==0.65.2
                      newrelic==5.28.0.149
                      uvicorn==0.13.4
                      ```
        edges:
          - text: "Done! What's next?"
            target_node_id: "END"

      - id: END
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Generate and customize the New Relic configuration file.

                **Steps**:

                1. **Generate the Configuration File**:
                    - Run the command to generate the `newrelic.ini` file:
                      
                      ```bash
                      newrelic-admin generate-config YOUR_NEW_RELIC_LICENSE_KEY newrelic.ini
                      ```
                2. **Customize the Configuration File**:
                    - Open `newrelic.ini` and insert the appropriate license key and application name:
                      
                      ```ini
                      license_key = YOUR_NEW_RELIC_LICENSE_KEY
                      app_name = Project Management API
                      ```
            - type: "text"
              content: "By following these steps, you will have successfully installed and configured the New Relic APM agent for your Project Management API. The next step involves integrating this setup within your Docker environment and ensuring it runs smoothly."

  - name: "Build and Test Application Container"
    context: "In this module, learners configure their Docker environment to include the New Relic agent for monitoring the Project Management API. They update the Dockerfile to install the New Relic agent and set it as the entry point. Next, they build the base Docker container and update the main Dockerfile to incorporate the New Relic agent, ensuring the application runs with monitoring capabilities enabled. This setup provides real-time insights and performance monitoring for the Python web application running in Docker containers."
    id: "4"
    nodes:
      - id: START
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Configure your Docker environment to include the New Relic agent.

                **Steps**:

                1. **Review Framework Information**:
                    - Choose the framework you are using. For the Project Management API, select `FastAPI`.
                2. **Create Base Docker Container**:
                    - Update the `Dockerfile` to include New Relic agent instructions:
                      
                      ```dockerfile
                      FROM python:3.9.14-alpine3.16
                      RUN pip install --no-cache-dir newrelic
                      ENTRYPOINT ["newrelic-admin", "run-program"]
                      ```
        edges:
          - text: "Done! Next step!"
            target_node_id: "screen11"

      - id: screen11
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Build and update Docker files for the New Relic agent.

                **Steps**:

                1. **Build the Base Container**:
                    - Use the command:
                      
                      ```bash
                      docker build -t python_newrelic:latest .
                      ```
                2. **Update Application Dockerfile**:
                    - Include the New Relic agent in the main `Dockerfile`:
                      
                      ```dockerfile
                      FROM python_newrelic:latest
                      # Additional instructions...
                      CMD ["newrelic-admin", "run-program", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
                      ```
                3. **Update main Dockerfile**
                    - Update the main `Dockerfile` in the project root to include the New Relic agent.
                      
                      ```dockerfile
                      # Dockerfile for your Python application
                      FROM python_newrelic:latest

                      RUN apk add --no-cache bzip2-dev \\
                                  coreutils \\
                                  gcc \\
                                  libc-dev \\
                                  libffi-dev \\
                                  libressl-dev \\
                                  linux-headers

                      WORKDIR /app
                      COPY requirements.txt .
                      RUN pip install --no-cache-dir -r requirements.txt

                      COPY . .
                      COPY newrelic.ini /app/newrelic.ini

                      ENV NEW_RELIC_CONFIG_FILE=/app/newrelic.ini

                      EXPOSE 8000
                      CMD ["newrelic-admin", "run-program", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
                      ```
        edges:
          - text: "Got it! What's next?"
            target_node_id: "END"

      - id: END
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Now we can build and test the application container with the New Relic Agent.

                **Steps**: 
                1. Build the application container

                ```bash
                docker build -t my_python_api .
                ```
                2. Run the application container

                ```bash
                docker run -d -p 8000:8000 my_python_api
                ```
                From here we should be able to see the application running in the browser with localhost:8000. We can see the logs for our container with `docker logs <container_id>`.

  - name: "Verify Data in New Relic "
    context: "In this final section of the module, learners verify that data from their FastAPI application is being reported to the New Relic dashboard by generating traffic and checking the dashboard for incoming data. They then review key metrics such as response time, throughput, and error rate to understand their application's performance. Learners summarize their insights, reflecting on patterns or anomalies indicating performance issues. Finally, the mission concludes with learners having successfully integrated New Relic for monitoring, setting the stage for exploring AI-driven insights in the next mission."
    id: "5"
    nodes:
      - id: START
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Verify that data is being reported to the New Relic dashboard.

                **Steps**:

                1. **Generate Traffic**:
                    - Use `/docs` page or postman to make requests to your API endpoints and generate traffic.
                    - We can also utilize `docker logs <container_id>` to see the logs of our project.
                2. **Verify Data in Dashboard**:
                    - Go to your New Relic dashboard and check for incoming data.
        edges:
          - text: "Done! Next step!"
            target_node_id: "screen14"

      - id: screen14
        type: message
        body:
          parts:
            - type: "text"
              content: |
                In this final task, you will review the key metrics gathered from New Relic APM and summarize the insights obtained from monitoring your FastAPI project. This will help you understand how New Relic can enhance your application's performance and reliability.

                **Steps**:

                1. **Navigate to APM Dashboard**:
                    - Go to the APM section in your New Relic dashboard. Here, you will find a summary of your application’s performance.
                2. **Monitor Key Metrics**:
                    - **Response Time**: Average time for your application to respond to requests.
                    - **Throughput**: Number of requests handled per minute.
                    - **Error Rate**: Percentage of requests resulting in errors.
        edges:
          - text: "Got it! What's next?"
            target_node_id: "screen15"

      - id: screen15
        type: message
        body:
          parts:
            - type: "text"
              content: |
                Summarize the insights obtained.

                **Steps**:

                1. **Summarize Insights**:
                    - Reflect on the data and metrics observed. Note patterns or anomalies indicating performance issues.
        edges:
          - text: "Great, what's next?"
            target_node_id: "END"

      - id: END
        type: message
        body:
          parts:
            - type: "text"
              content: |
                You have completed the mission successfully! Your FastAPI application is now monitored by New Relic, providing valuable insights to maintain and improve your application’s performance. In the next mission, you will enhance your monitoring setup by exploring AI-driven insights in New Relic.
