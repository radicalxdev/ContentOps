{
  "tasks": [
    {
      "context": "In this mission, learners focus on improving code security using GitHub Copilot Chat. They start by understanding the importance of code security and the measures to protect software from unauthorized access, data breaches, and other threats. The learning objectives include collaborating with Copilot to enhance code security and implementing security features such as rate limiting. Learners are guided to prepare the repository by cloning it from GitHub, creating environment files, and activating the shell script to set up the development or production environment. This setup prepares them for the upcoming exercises where they will use Copilot Chat to generate and evaluate suggestions for improving code security.",
      "id": "1",
      "name": "Introduction and Setup",
      "nodes": [
        {
          "body": {
            "parts": [
              {
                "content": "Hello, {username}! Welcome to the 'Enhancing Code Security with AI Suggestions' mission. This training focuses on using GitHub Copilot Chat to generate suggestions for improving code security in a sample application. Remember, the suggestions from Copilot do not represent best practices or comprehensive solutions. Use your judgment and expertise to evaluate and implement these suggestions. Ready to start?\n",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "END",
              "text": "Yes, let's get started!"
            },
            {
              "target_node_id": "screen1a",
              "text": "Tell me more about the objectives."
            },
            {
              "target_node_id": "screen1b",
              "text": "What do you mean by Code Security?"
            }
          ],
          "id": "START",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "In this mission, you'll use GitHub Copilot to generate suggestions that help improve code security in a sample application. Code security refers to the measures taken to protect software from unauthorized access, data breaches, and other security threats. Improving your code security can help you protect your applications and systems from security threats.\n",
                "type": "text"
              },
              {
                "content": "The learning objectives are:\n- Demonstrate how to collaborate with Copilot to enhance code security.\n- Use Copilot to implement security features such as rate limiting.\n",
                "type": "text"
              },
              {
                "content": "Ready to proceed?",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "END",
              "text": "Yes, let's move on!"
            },
            {
              "target_node_id": "screen1b",
              "text": "What do you mean by Code Security?"
            }
          ],
          "id": "screen1a",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "Code security refers to the measures taken to protect software from unauthorized access, data breaches, and other security threats. Code security is an essential aspect of software development that involves protecting applications and systems from security threats. Improving your code security can help you to protect your applications and systems from security threats.\n\nIn this exercise, you'll use GitHub Copilot Chat to generate suggestions that help you improve code security in a sample application.\n",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "END",
              "text": "Got it!"
            }
          ],
          "id": "screen1b",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "Let's prepare the repository for this exercise. Follow these steps:\n1. Clone the GitHub repository found at: https://github.com/alfred-ai-co/Improve-Code-Quality-with-Copilot\n2. Create a `dev.env` and `prod.env` file based on the `env.example`, setting the variable `APP_ENV` to “dev” or “prod” respectively.\n3. In the terminal, activate the shell script `start.sh` with the command: `/start.sh <args>`, where you may set `dev` or `prod` as the argument. By default, a `dev` environment is instantiated.\n",
                "type": "text"
              },
              {
                "content": "Ready to continue?",
                "type": "text"
              }
            ]
          },
          "id": "END",
          "type": "message"
        }
      ]
    },
    {
      "context": "In this segment of the mission, learners begin to develop prompts for GitHub Copilot Chat to improve the security of their code. They start by entering a general prompt to get broad security improvement suggestions. After examining Copilot's response, which provides an overview of potential security enhancements, learners prepare to delve deeper into specific security measures, such as implementing rate limiting in the application. This step sets the stage for targeted security improvements using Copilot's suggestions.",
      "id": "2",
      "name": "General Security Improvements with Copilot Chat",
      "nodes": [
        {
          "body": {
            "parts": [
              {
                "content": "Let's begin by developing a prompt that provides the needed context for Copilot. Start with general workspace prompts to narrow down our results into actionable suggestions. Enter the following prompt:\n\n```python\n@workspace /explain how can I improve the security of my code?\n```\n",
                "type": "text"
              },
              {
                "content": "Ready to proceed?",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "END",
              "text": "Command entered!"
            }
          ],
          "id": "START",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "Examine Copilot's response regarding the application as a whole. You might see general suggestions for improving security. We'll explore in more detail how to add **rate limiting** to the application.\n",
                "type": "text"
              },
              {
                "content": "Ready to explore implementing rate limiting?",
                "type": "text"
              }
            ]
          },
          "id": "END",
          "type": "message"
        }
      ]
    },
    {
      "context": "In this segment of the mission, learners begin to develop prompts for GitHub Copilot Chat to improve the security of their code. They start by entering a general prompt to get broad security improvement suggestions. After examining Copilot's response, which provides an overview of potential security enhancements, learners prepare to delve deeper into specific security measures, such as implementing rate limiting in the application. This step sets the stage for targeted security improvements using Copilot's suggestions.",
      "id": "3",
      "name": "Implementing Rate Limiting",
      "nodes": [
        {
          "body": {
            "parts": [
              {
                "content": "To introduce rate limiting to the API, let's ask Copilot how to implement it. Enter the following prompt:\n\n```python\n@workspace /explain How do I implement rate limiting in the FastAPI application?\n```\n",
                "type": "text"
              },
              {
                "content": "Ready to proceed?",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "screen4a",
              "text": "Command entered!"
            }
          ],
          "id": "START",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "Review Copilot's response about introducing rate limiting to the application. Pay attention to the suggested library and the example provided.\n",
                "type": "text"
              },
              {
                "content": "https://firebasestorage.googleapis.com/v0/b/reality-ai-b2b-sandbox.appspot.com/o/Program%2FJourney%202%2FModule%202%2FUnit%204%2Fmodule_2_mission_3_1.png?alt=media&token=5f83633e-1c62-446a-99ef-3f17918c6274",
                "type": "image"
              },
              {
                "content": "Ready to proceed?",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "screen4b",
              "text": "Yes, let's continue!"
            }
          ],
          "id": "screen4a",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "Now, let's ask Copilot for a specific implementation strategy. Use the following prompt:\n\n```python\n@workspace How can we further implement the rate limiter in #file:main.py and then apply the limiter within each route as part of the router such as #file:projects.py given the file structure?\n```\n",
                "type": "text"
              },
              {
                "content": "Ready to proceed?",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "screen4c",
              "text": "Command entered!"
            }
          ],
          "id": "screen4b",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "Examine Copilot's response about introducing rate limiting to the application as a whole. This can give us a direction of where to go next. We should pay attention to the suggested library and the example provided about how it would work within our app. This helps us consider the feasibility of the suggestion.\n",
                "type": "text"
              },
              {
                "content": "Ready to review an implemented solution?",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "screen5",
              "text": "Yes, let's proceed!"
            }
          ],
          "id": "screen4c",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "Let's finally drill down to a very specific implementation by passing this prompt:\n```\n@workspace How can we further implement the rate limiter to the #file:main.py and then apply the limiter within each route as part of the router such as #file:projects.py given the file structure\n```\nOnce sent, take a minute to review the response.\n",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "screen5a",
              "text": "Yes, let's proceed!"
            }
          ],
          "id": "screen5",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "Examine Copilot's implementation. In our case, the actual implementation involves several steps such as moving the logic of the limiter to a separate file within the core/ folder. We can instantiate this as an attribute to the app within the main.py folder and then import the app.core.limiter module to create a decorator @limiter.limit('5/minute') on top of the routes.\n",
                "type": "text"
              },
              {
                "content": "https://firebasestorage.googleapis.com/v0/b/reality-ai-b2b-sandbox.appspot.com/o/Program%2FJourney%202%2FModule%202%2FUnit%204%2Fmodule_2_mission_3_2.png?alt=media&token=2de1f9f7-48d9-4897-aa0c-937821ccc8be",
                "type": "image"
              },
              {
                "content": "Ready to review an implemented solution?",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "screen6",
              "text": "Show me an implementation."
            }
          ],
          "id": "screen5a",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "Let's examine an implemented rate limit solution. Use git to switch to the `feat/add_rate_limits` branch to see a working implementation. This will help you compare your solution with an example implementation. The command would be `git switch feat/add_rate_limits`.\n",
                "type": "text"
              },
              {
                "content": "https://firebasestorage.googleapis.com/v0/b/reality-ai-b2b-sandbox.appspot.com/o/Program%2FJourney%202%2FModule%202%2FUnit%204%2Fmodule_2_mission_3_3.png?alt=media&token=a6a89462-4335-4026-b0ab-97e114dce5a6",
                "type": "image"
              },
              {
                "content": "Feel free to also use the `@workspace` command to review the code for adding the rate limits. We can test the solution works by starting the server and then sending a request to the API from the /docs page.\n",
                "type": "text"
              },
              {
                "content": "Let's wrap up!",
                "type": "text"
              }
            ]
          },
          "edges": [
            {
              "target_node_id": "END",
              "text": "Okay, let's wrap up!"
            }
          ],
          "id": "screen6",
          "type": "message"
        },
        {
          "body": {
            "parts": [
              {
                "content": "Here is a summary of what we've learned:\n- Used Copilot to generate suggestions for improving code security.\n- Focused on implementing rate limiting to enhance security.\n- Reviewed and compared your implementation with an example solution.\n",
                "type": "text"
              },
              {
                "content": "Congratulations, {username}! You've successfully used GitHub Copilot Chat to generate suggestions and implement a security feature in your code. This exercise demonstrated how to interact with Copilot to enhance code security, focusing on implementing rate limiting. Remember, always review and assess the suggestions before implementing them.\n",
                "type": "text"
              }
            ]
          },
          "id": "END",
          "type": "message"
        }
      ]
    }
  ]
}
