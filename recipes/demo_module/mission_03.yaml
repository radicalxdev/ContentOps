tasks:
  - name: "Introduction"
    id: "1"
    nodes:
      - id: START
        type: message
        body:
          parts:
            - type: "text"
              content: "Welcome to the mission on generating inline code documentation using GitHub Copilot Chat! Let's explore how this powerful tool can help you document your code efficiently. ðŸ˜Š"
            - type: "text"
              content: "Let's start with generating inline code documentation using the Chat view. This will help you create detailed comments for your code. Ready to begin?"
        edges:
          - text: "Yes, I'm ready"
            target_node_id: "node_1"
      - id: node_1
        type: message
        body:
          parts:
            - type: "text"
              content: "Awesome! First, let's open the app/api/routes/projects.py file in Visual Studio Code."
            - type: "text"
              content: "Once the file is open, select all of the code starting from the import statements to the end of the file."
            - type: "text"
              content: "Next, open the Chat view by selecting 'Chat' from the Activity Bar, or by pressing `Ctrl + Alt + I`. Once you have the Chat view open, let me know!"
        edges:
          - text: "Chat view is open"
            target_node_id: "node_2"
      - id: node_2
        type: message
        body:
          parts:
            - type: "text"
              content: "Great! Now, let's ask GitHub Copilot Chat to generate inline code documentation for the selected code. Enter the following command in the Chat view:"
            - type: "text"
              content: "```generate inline code documentation for the selected code```"
            - type: "text"
              content: "```@workspace document this project```\n Or you can send: \n```@workspace #selection generate inline code documentation for the selected code```"
            - type: "image"
              content: "https://file.notion.so/f/f/43a92826-71a1-4057-8884-809bc640049f/d6981d00-3315-4caa-9e3a-1fde1840dffa/Untitled.png?id=43d32baa-2bb0-4f05-b832-ed983bf80164&table=block&spaceId=43a92826-71a1-4057-8884-809bc640049f&expirationTimestamp=1721210400000&signature=GCo-OMTwTQYLiIZRjaSP62HVHMFBbl7JBvGZj9gY4uA&downloadName=Untitled.png"
            - type: "text"
              content: "It should look something like so. The response includes suggested code comments and a portion of the associated code. You could manually move code comments into the actual code file."
            - type: "text"
              content: "Take a minute to review the suggested code documentation. When you're ready, let me know how it went!"
        edges:
          - text: "Reviewed the documentation"
            target_node_id: "END"
      - id: END
        type: message
        body:
          parts:
            - type: "text"
              content: "Fantastic! Now, let's move on to generating inline code documentation using the inline chat feature. This is useful for documenting specific methods within your code. Ready to continue?"
  - name: "Generate Inline Code Documentation using Chat View"
    id: "2"
    nodes:
      - id: START
        type: message
        body:
          parts:
            - type: "text"
              content: "Great! Scroll to the top of the `app/db_models/crud.py` file and select the `create_project` method."
            - type: "text"
              content: "To open an inline chat, press Ctrl + I. Once you have the inline chat open, let me know!"
            - type: "text"
        edges:
          - text: "Inline chat is open"
            target_node_id: "node_1"
      - id: node_1
        type: message
        body:
          parts:
            - type: "text"
              content: "Now, let's generate inline documentation for the create_project method. Enter the following prompt: `/doc`"
            - type: "image"
              content: "https://file.notion.so/f/f/43a92826-71a1-4057-8884-809bc640049f/45de80b6-0e75-445b-a357-21cec732efed/Untitled.png?id=3fa5d9dd-7af1-4732-8695-2c547f250872&table=block&spaceId=43a92826-71a1-4057-8884-809bc640049f&expirationTimestamp=1721210400000&signature=ysW1OcjvxGY_xJs3IEeCBzRsEWd4P8d3Ag1Uqitg0-I&downloadName=Untitled.png"
            - type: "text"
              content: "Notice that the suggested documentation for the Project class includes a summary and descriptions of the parameters. To insert the generated documentation into your code, select `Accept`. You can always select Discard if you want to reject the suggested update."
            - type: "text"
              content: "Take a minute to review the generated code documentation. When you're ready, let me know how it went!"
        edges:
          - text: "Reviewed the documentation"
            target_node_id: "END"
      - id: END
        type: message
        body:
          parts:
            - type: "text"
              content: "Now, let's move on to generating inline code documentation using the Generate Docs smart action. Ready to proceed?"
  - name: "Generate inline code documentation using the Generate Docs smart action"
    id: "3"
    nodes:
      - id: START
        type: message
        body:
          parts:
            - type: "text"
              content: "In the Visual Studio Code editor, select the `update_project` method. Right-click the selected code block, select Copilot, and then select Generate Docs."
            - type: "image"
              content: "https://file.notion.so/f/f/43a92826-71a1-4057-8884-809bc640049f/47e574cb-c3b1-46f1-a711-c8689d24769a/Untitled.png?id=2bad4d57-80d3-4d38-9595-96b6a6f65d4a&table=block&spaceId=43a92826-71a1-4057-8884-809bc640049f&expirationTimestamp=1721210400000&signature=VlJIYsSTDBHQprxZI-XkGx1DLGExQ2ZZCk7TyC6HjBo&downloadName=Untitled.png"
            - type: "text"
              content: "Take a minute to review the suggested code comments. Notice that the Generate Docs smart action and inline chat produce similar results."
        edges:
          - text: "Reviewed the documentation"
            target_node_id: "node_1"
      - id: node_1
        type: message
        body:
          parts:
            - type: "text"
              content: "Awesome! You can also generate comments for the entire class at once rather than adding inline comments to each method individually. Let's give it a try."
            - type: "text"
              content: "Select all of the `CRUD` operations for projects inside the `app/db_models/crud.py` file. Once selected, open the chat and add the following message:"
            - type: "text"
              content: "```#file:crud.py #selection Generate documentation for all of the CRUD operations```"
            - type: "text"
              content: "Wait for the documentation to be generated. Once generated, click on Insert at Cursor or use the keyboard shortcut `Ctrl + Enter.` Then, review the suggested changes. When you're ready, let me know how it went!"
        edges:
          - text: "Reviewed the changes"
            target_node_id: "node_2"
      - id: node_2
        type: message
        body:
          parts:
            - type: "text"
              content: "Great, notice that the generated documentation includes comments for each of the methods."
            - type: "image"
              content: "https://file.notion.so/f/f/43a92826-71a1-4057-8884-809bc640049f/3444a8f5-8a8c-43c0-8231-0edd2c8848ba/Untitled.png?id=19489d89-657a-430c-b2d9-60d1dd7a5b3f&table=block&spaceId=43a92826-71a1-4057-8884-809bc640049f&expirationTimestamp=1721210400000&signature=ork4Dq9sipazAjBmwnXBIpEgmxBJJNQKymusmtsrUTo&downloadName=Untitled.png"
            - type: "text"
              content: "If you find any issues in the generated documentation, make sure to modify the suggested changes before continuing."
            - type: "text"
              content: "We've reached the end of the exercise, are you ready to review?"
        edges:
          - text: "Yes, let's review!"
            target_node_id: "END"
      - id: END
        type: message
        body:
          parts:
            - type: "text"
              content: "In this exercise, you used GitHub Copilot Chat to generate inline code documentation for the Alfred AI project. You learned how to generate inline code documentation using the Chat view, inline chat, and the Generate Docs smart action."
            - type: "text"
              content: "By generating code comments, you can create a more readable and maintainable codebase that's easier for other developers to understand and work with. Inline code documentation is an essential part of software development that helps developers understand the codebase, its purpose, and how to use it."
            - type: "text"
              content: "Is there anything else you'd like to learn or any other assistance you need?"
